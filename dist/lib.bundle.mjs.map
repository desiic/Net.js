{"version":3,"file":"lib.bundle.mjs","mappings":";;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,iEAAe,EAAE,EAAC;AAClB;;;;;;;;;;;;;;;AC1BA;AACgC;;AAEhC;AACA;AACA,iBAAiB,oDAAE;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,YAAY,EAAC;AAC5B;;;;;;;;;;;;;;;;;AC9IA;AACsB;AACE;;AAExB;AACgC;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,YAAY,EAAE,QAAQ;AACxD,sCAAsC,YAAY,EAAE,QAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,YAAY;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B,iBAAiB,YAAY,EAAE,QAAQ;AACvC;AACA;;AAEA;AACA;AACA,6CAA6C,SAAS,GAAG,kBAAkB;AAC3E;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,SAAS,GAAG,kBAAkB,GAAG,KAAK;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,IAAI,GAAG,iBAAiB;AACrD,gCAAgC,wCAAW;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,8CAAiB;AAC5C;;AAEA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;;AAEA,iEAAe,WAAW,EAAC;AAC3B;;;;;;;;;;;;;;AC7IA,iEAAe,EAAE,EAAC;AAClB;;;;;;SCDA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA;UACA,yCAAyC,wCAAwC;UACjF;UACA;UACA;;;;;UCPA;;;;;UCAA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;;;;;;;ACNA;AAC4C;AACW;AACD;AACK;AAC3D;AACA;AACA,MAAM,oEAAc,8EAAa,iFAAiB;AAClD;AACA;AACA,iEAAe,GAAG,EAAC;AACnB,M","sources":["webpack:///external node-commonjs \"fs\"","webpack:///external node-commonjs \"http\"","webpack:///./src/core/js.mjs","webpack:///./src/httpx/base-handler.mjs","webpack:///./src/httpx/base-server.mjs","webpack:///./src/wsockx/base-ws-handler.mjs","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/lib.mjs"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"fs\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"http\");","/**\n * JS lang utils\n */ \nclass js {\n\n    /**\n     * New async lock (not thread lock)\n     */ \n    static new_lock(){\n        var unlock,Lock = new Promise((res,rej)=>{ unlock=res; });\n        return [Lock,unlock];\n    }\n\n    /**\n     * Stay idle for a number of ms (not blocking thread aka sleep)\n     */ \n    static async stay_idle(ms){\n        var [Lock,unlock] = js.new_lock();\n        setTimeout(()=>{\n            unlock();\n        },ms);\n        await Lock;\n    }\n}\n\nexport default js;\n// EOF","// Modules\nimport js from \"../core/js.mjs\";\n\n// Shorthands\nconst log      = console.log;\nconst new_lock = js.new_lock;\n\n/**\n * Base HTTP handler\n */ \nclass base_handler {\n    Allowed_Origins = null;\n\n    /**\n     * Ctor\n     */ \n    constructor(){\n        this.Allowed_Origins = process.Server.Config.Allowed_Origins;\n    }\n\n    /**\n     * Get origin\n     */ \n    get_origin(Req){\n        if (Req.headers.origin != null) return Req.headers.origin;\n        return Req.headers.Origin;\n    }\n\n    /**\n     * Allow CORS (allow accessing from other domains)\n     */ \n    allow_cors_all(Req,Res){\n        Res.setHeader(\"Access-Control-Allow-Origin\",  \"*\");        \n        Res.setHeader(\"Access-Control-Allow-Methods\", \"*\");\n        Res.setHeader(\"Access-Control-Allow-Headers\", \"*\");\n    }\n\n    /**\n     * Allow CORS for some origins\n     */ \n    allow_cors_some(Req,Res,Origins){\n        var Origin = this.get_origin(Req).toLowerCase().trim();\n        if (Origins.indexOf(Origin) == -1) return; // Not to allow\n\n        // Allow\n        Res.setHeader(\"Access-Control-Allow-Origin\",  Origin);        \n        Res.setHeader(\"Access-Control-Allow-Methods\", \"*\");\n        Res.setHeader(\"Access-Control-Allow-Headers\", \"*\");\n    }\n\n    /**\n     * Get body, \n     * Ref: https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/\n     */ \n    async get_body(Req){\n        var [Lock,unlock] = new_lock();\n        var Buf_Chunks    = [];\n\n        Req.on(\"error\", Err=>{\n            log(Err);\n            let Body = Buffer.concat(Buf_Chunks).toString();\n            unlock(Body);\n        });\n        Req.on(\"data\", Chunk=>{\n            Buf_Chunks.push(Chunk);\n        });\n        Req.on(\"end\", ()=>{\n            let Body = Buffer.concat(Buf_Chunks).toString();\n            unlock(Body);\n        });\n\n        var Body = await Lock;\n        return Body;\n    }\n\n    /**\n     * Get body as object\n     */ \n    async get_body_obj(Req){\n        var Body = await this.get_body(Req);\n        return JSON.parse(Body);\n    }\n\n    /**\n     * End\n     */ \n    end(Res){\n        Res.end();\n    }\n\n    /**\n     * Send\n     */ \n    send(Res,Value_Str,Content_Type){\n        Res.setHeader(\"Content-Type\", Content_Type);\n        Res.end(Value_Str);\n    }\n\n    /**\n     * Send text\n     */ \n    send_text(Res,Text){\n        this.send(Res,Text,\"text/plain\");\n    }\n\n    /**\n     * Send HTML\n     */ \n    send_html(Res,Html){\n        this.send(Res,Html,\"text/html\");\n    }\n\n    /**\n     * Send object\n     */ \n    send_json(Res,Obj){\n        this.send(Res,JSON.stringify(Obj),\"application/json\");\n    }\n\n    /**\n     * Process OPTIONS\n     */ \n    handle_cors(Req,Res){\n        Res.end(\"\"); // No header to respond, no CORS by default\n    }\n\n    /**\n     * Process GET\n     */ \n    async handle_get(Req,Res){\n        // To override\n    }\n\n    /**\n     * Process POST\n     */ \n    async handle_post(Req,Res){\n        // To override\n    }\n}\n\nexport default base_handler;\n// EOF","// Libs\nimport fs   from \"fs\";\nimport http from \"http\";\n\n// Modules\nimport js from \"../core/js.mjs\";\n\n// Shorthands\nconst log  = console.log;\nconst logw = console.warn;\nconst loge = console.error;\n\n/**\n * Base server\n */ \nclass base_server {\n    Cwd             = process.cwd();\n    Env_Name        = null;\n    Config          = null;\n    port            = null;\n    Http_Server     = null;\n    Http2_Server    = null; // Unused, Chromium-based accepts HTTP2 secure only?\n    Handlers_Dir    = null;\n    Ws_Handlers_Dir = null;\n\n    /**\n     * Ctor, config file and handlers dirs have paths starting from current working dir.\n     */ \n    constructor(Config_File,Handlers_Dir=\"handlers\",Ws_Handlers_Dir=\"ws-handlers\"){ \n        this.Env_Name        = process.env.Envname;\n        this.Config_File     = Config_File;        \n        this.Handlers_Dir    = Handlers_Dir;\n        this.Ws_Handlers_Dir = Ws_Handlers_Dir;\n\n        // Scope\n        this.handle_request = this.handle_request.bind(this);\n    }\n\n    /**\n     * Process request \n     */ \n    async process_request(Req,Res,Handler_File){\n        log(\"Handler file:\",Handler_File);\n        try{\n            const Handler_Class = (await import(/*webpackIgnore:true*/Handler_File)).default;\n            var   Handler       = new Handler_Class();\n        }\n        catch(Err){\n            log(Err);\n            log(`No handler for ${Req.method} ${Req.url}`);\n            Res.end(`No handler for ${Req.method} ${Req.url}`);\n            return;\n        }\n        Handler.Server = this;\n        \n        if (Req.method==\"OPTIONS\")\n            Handler.handle_cors(Req,Res);\n        else\n        if (Req.method==\"GET\")\n            Handler.handle_get(Req,Res);\n        else\n        if (Req.method==\"POST\")\n            Handler.handle_post(Req,Res);\n        else{\n            log(`Method ${Req.method} is not supported.`);\n            Res.end();\n        }\n    }\n\n    /**\n     * Send favicon.ico\n     */ \n    send_favicon(Req,Res){\n        Res.end();\n    }\n\n    /**\n     * Handle request\n     */\n    handle_request(Req,Res){ // Req:IncomingMessage, Res:ServerResponse\n        log(`\\n${Req.method} ${Req.url}`);\n        var Path   = Req.url;\n        var Tokens = Path.split(\"/\").filter(X => X.trim().length>0);\n\n        // Root\n        if (Path.trim()==\"/\"){\n            this.process_request(Req,Res, `${this.Cwd}/${this.Handlers_Dir}/root.mjs`);\n            return;\n        }\n\n        // Favicon\n        if (Path.trim().toLowerCase()==\"/favicon.ico\"){\n            this.send_favicon(Req,Res);\n            return;\n        }\n\n        // Bad request\n        if (Tokens.length==0){\n            log(\"Bad request, empty path.\");\n            Res.end();\n            return;\n        }\n\n        // Normal request\n        if (Path.charAt(0)==\"/\") Path=Path.slice(1);\n        this.process_request(Req,Res, `${this.Cwd}/${this.Handlers_Dir}/${Path}.mjs`);\n    }\n\n    /**\n     * Init\n     */ \n    async init(){\n        log(\"Env:\",this.Env_Name);\n        \n        // Load config\n        var Cwd         = process.cwd();\n        var Config_Path = `${Cwd}/${this.Config_File}`;\n        var Json        = await fs.promises.readFile(Config_Path);\n        var Config      = JSON.parse(Json);\n        log(\"Config:\",JSON.stringify(Config,null,4));\n        this.Config = Config;\n\n        // Set port\n        this.port = Config.Ports[this.Env_Name];\n        log(\"Port:\",this.port);\n    }\n\n    /**\n     * Start\n     */ \n    start(){\n        var Http_Server  = http.createServer(this.handle_request);        \n        this.Http_Server = Http_Server;\n\n        // Start listening\n        this.Http_Server.listen(this.port);\n        log(`Server listening at port ${this.port}...`);\n    }\n}\n\nexport default base_server;\n// EOF","export default {};\r\n// EOF","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Modules\r\nimport js              from \"./core/js.mjs\";\r\nimport base_handler    from \"./httpx/base-handler.mjs\";\r\nimport base_server     from \"./httpx/base-server.mjs\";\r\nimport base_ws_handler from \"./wsockx/base-ws-handler.mjs\";\r\n\r\nconst lib = {\r\n    js, base_handler, base_server, base_ws_handler\r\n};\r\n\r\nexport default lib;\r\n// EOF"],"names":[],"sourceRoot":""}